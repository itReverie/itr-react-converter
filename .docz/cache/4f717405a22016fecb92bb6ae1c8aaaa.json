{"remainingRequest":"/Users/brenda/itr-react-converter/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/brenda/itr-react-converter/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[\"/Users/brenda/itr-react-converter/node_modules/react-hot-loader/babel.js\",[\"/Users/brenda/itr-react-converter/node_modules/babel-plugin-react-docgen/lib/index.js\",{\"resolver\":\"findAllExportedComponentDefinitions\"}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/brenda/itr-react-converter/src/app/components/input/index.js","dependencies":[{"path":"/Users/brenda/itr-react-converter/src/app/components/input/index.js","mtime":1538402338708},{"path":"/Users/brenda/itr-react-converter/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/brenda/itr-react-converter/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brenda/itr-react-converter/src/app/components/input/index.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledInput } from './input.style';\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input, _Component);\n\n  function Input(props) {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));\n\n    _this.onInputChanged = function (event) {\n      _this.setState({\n        amount: event.target.value\n      });\n\n      _this.props.onInputChanged(event.target.value);\n    };\n\n    _this.onInputChanged = _this.onInputChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      amount: 1\n    };\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(StyledInput, {\n        value: this.state.amount,\n        thousandSeparator: true,\n        onChange: this.onInputChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nexport { Input as default };\nInput.propTypes = {\n  value: PropTypes.number,\n  type: PropTypes.string,\n  onInputChanged: PropTypes.func.isRequired\n};\nInput.defaultProps = {\n  value: 1,\n  type: 'output'\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Input, \"Input\", \"/Users/brenda/itr-react-converter/src/app/components/input/index.js\");\n  leaveModule(module);\n})();\n\n;\nInput.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"onInputChanged\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Input\",\n  \"props\": {\n    \"value\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'output'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onInputChanged\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/brenda/itr-react-converter/src/app/components/input/index.js"],"names":["React","Component","PropTypes","StyledInput","Input","props","onInputChanged","event","setState","amount","target","value","bind","state","propTypes","number","type","string","func","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,WAAR,QAA0B,eAA1B;;IAEqBC,K;;;;;AACjB,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;;AADc,UAMlBC,cANkB,GAMD,UAACC,KAAD,EAAU;AACvB,YAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAACF,KAAK,CAACG,MAAN,CAAaC;AAArB,OAAd;;AACA,YAAKN,KAAL,CAAWC,cAAX,CAA0BC,KAAK,CAACG,MAAN,CAAaC,KAAvC;AACH,KATiB;;AAEd,UAAKL,cAAL,GAAoB,MAAKA,cAAL,CAAoBM,IAApB,uDAApB;AACA,UAAKC,KAAL,GAAW;AAACJ,MAAAA,MAAM,EAAC;AAAR,KAAX;AAHc;AAIjB;;;;6BAOO;AACJ,aAAO,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,MAA/B;AACH,QAAA,iBAAiB,EAAE,IADhB;AAEH,QAAA,QAAQ,EAAE,KAAKH,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAGH;;;;;;;;;;;EAhB8BL,S;;SAAdG,K;AAmBrBA,KAAK,CAACU,SAAN,GAAgB;AACZH,EAAAA,KAAK,EAAET,SAAS,CAACa,MADL;AAEZC,EAAAA,IAAI,EAAEd,SAAS,CAACe,MAFJ;AAGZX,EAAAA,cAAc,EAAEJ,SAAS,CAACgB,IAAV,CAAeC;AAHnB,CAAhB;AAMAf,KAAK,CAACgB,YAAN,GAAmB;AACfT,EAAAA,KAAK,EAAE,CADQ;AAEfK,EAAAA,IAAI,EAAE;AAFS,CAAnB;;;;;;;;;;;;0BAzBqBZ,K","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {StyledInput} from './input.style';\n\nexport default class Input extends Component{\n    constructor(props){\n        super(props);\n        this.onInputChanged=this.onInputChanged.bind(this);\n        this.state={amount:1}\n    }\n\n    onInputChanged = (event) =>{\n        this.setState({amount:event.target.value});\n        this.props.onInputChanged(event.target.value);\n    }\n\n    render(){\n        return(<StyledInput value={this.state.amount} \n            thousandSeparator={true} \n            onChange={this.onInputChanged}/>)\n    }\n}\n\nInput.propTypes={\n    value: PropTypes.number,\n    type: PropTypes.string,\n    onInputChanged: PropTypes.func.isRequired\n}\n\nInput.defaultProps={\n    value: 1,\n    type: 'output'\n}\n"]}]}