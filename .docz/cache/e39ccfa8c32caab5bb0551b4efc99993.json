{"remainingRequest":"/Users/brenda/itr-react-converter/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/brenda/itr-react-converter/node_modules/docz-core/node_modules/babel-preset-react-app/index.js\",{\"flow\":true}]],\"plugins\":[\"/Users/brenda/itr-react-converter/node_modules/react-hot-loader/babel.js\",[\"/Users/brenda/itr-react-converter/node_modules/babel-plugin-react-docgen/lib/index.js\",{\"resolver\":\"findAllExportedComponentDefinitions\"}]],\"cacheDirectory\":true,\"babelrc\":false}!/Users/brenda/itr-react-converter/src/app/components/dropdown/index.js","dependencies":[{"path":"/Users/brenda/itr-react-converter/src/app/components/dropdown/index.js","mtime":1538361498479},{"path":"/Users/brenda/itr-react-converter/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/brenda/itr-react-converter/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/brenda/itr-react-converter/src/app/components/dropdown/index.js\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport { customDropdownStyles } from './dropdown.style';\n\nvar ListItems =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListItems, _Component);\n\n  function ListItems(props) {\n    var _this;\n\n    _classCallCheck(this, ListItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItems).call(this, props));\n\n    _this.onItemChanged = function (selectedItem) {\n      _this.props.onItemChanged(selectedItem);\n    };\n\n    _this.onItemChanged = _this.onItemChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ListItems, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Select, {\n        options: this.props.options,\n        styles: customDropdownStyles,\n        defaultValue: this.props.defaultValue,\n        onChange: this.onItemChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return ListItems;\n}(Component);\n\nexport { ListItems as default };\nListItems.propTypes = {\n  options: PropTypes.array.isRequired,\n  onItemChanged: PropTypes.func.isRequired,\n  defaultValue: PropTypes.object\n};\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(ListItems, \"ListItems\", \"/Users/brenda/itr-react-converter/src/app/components/dropdown/index.js\");\n  leaveModule(module);\n})();\n\n;\nListItems.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"onItemChanged\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"selectedItem\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"ListItems\",\n  \"props\": {\n    \"options\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onItemChanged\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"defaultValue\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};",{"version":3,"sources":["/Users/brenda/itr-react-converter/src/app/components/dropdown/index.js"],"names":["React","Component","PropTypes","Select","customDropdownStyles","ListItems","props","onItemChanged","selectedItem","bind","options","defaultValue","propTypes","array","isRequired","func","object"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,oBAAR,QAAmC,kBAAnC;;IAEqBC,S;;;;;AAEnB,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,mFAAMA,KAAN;;AADgB,UAKlBC,aALkB,GAKH,UAACC,YAAD,EAAgB;AAC7B,YAAKF,KAAL,CAAWC,aAAX,CAAyBC,YAAzB;AACD,KAPiB;;AAEhB,UAAKD,aAAL,GAAoB,MAAKA,aAAL,CAAmBE,IAAnB,uDAApB;AAFgB;AAGjB;;;;6BAMO;AACN,aAAQ,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAA5B;AACN,QAAA,MAAM,EAAEN,oBADF;AAEN,QAAA,YAAY,EAAE,KAAKE,KAAL,CAAWK,YAFnB;AAGN,QAAA,QAAQ,EAAE,KAAKJ,aAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAKD;;;;;;;;;;;EAjBoCN,S;;SAAlBI,S;AAqBrBA,SAAS,CAACO,SAAV,GAAqB;AAClBF,EAAAA,OAAO,EAAER,SAAS,CAACW,KAAV,CAAgBC,UADP;AAElBP,EAAAA,aAAa,EAAEL,SAAS,CAACa,IAAV,CAAeD,UAFZ;AAGlBH,EAAAA,YAAY,EAACT,SAAS,CAACc;AAHL,CAArB;;;;;;;;;;;;0BArBqBX,S","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\nimport {customDropdownStyles} from './dropdown.style';\n\nexport default class ListItems extends Component{\n\n  constructor(props){\n    super(props);\n    this.onItemChanged= this.onItemChanged.bind(this);\n  }\n\n  onItemChanged =(selectedItem)=>{\n    this.props.onItemChanged(selectedItem);\n  }\n\n  render(){\n    return (<Select options={this.props.options} \n      styles={customDropdownStyles}\n      defaultValue={this.props.defaultValue}\n      onChange={this.onItemChanged}\n      />)\n  }\n}\n\n\nListItems.propTypes= {\n   options: PropTypes.array.isRequired,\n   onItemChanged: PropTypes.func.isRequired,\n   defaultValue:PropTypes.object\n}\n\n"]}]}